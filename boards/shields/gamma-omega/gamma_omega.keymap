#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Layers */
#define AL1 0
#define AL2 1
#define NAV 2
#define NUM 3
#define SYM 4
/ {
    combos {
        compatible = "zmk,combos";
        combo_ret {
            timeout-ms = <30>;
            key-positions = <6 7>;
            bindings = <&kp RET>;
            layers = <AL1 SYM NUM NAV>;
        };
        combo_del {
            timeout-ms = <30>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
            layers = <AL1 SYM NUM NAV>;
        };
        combo_esc {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            layers = <AL1 SYM NUM NAV>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
            layers = <AL1 SYM NUM NAV>;
        };
    };
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            lazy;
        };
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
//  0   1   2   3   4     5   6   7   8   9
// 10  11  12  13  14    15  16  17  18  19
// 20  21  22  23  24    25  26  27  28  29
//         30  31  32    33  34  35
    keymap {
        compatible = "zmk,keymap";

        alpha { // Layer 0
            bindings = <
&none   &hm LGUI N   &hm LALT G   &hm LCTRL R   &none       &none     &hm RCTRL U   &hm RALT I   &hm RGUI O   &none
&kp A   &kp S        &kp D        &kp F         &none       &none     &kp J         &kp K        &kp L        &kp SEMI
&none   &none        &none        &none         &none       &none     &none         &none        &none        &none
                     &mo NUM      &mo AL2       &kp BSPC    &mo NAV   &kp SPACE     &skq LSHIFT
        >;
        };

        alpha2 { // Layer 1
            bindings = <
&none   &hm LGUI W   &hm LALT E   &hm LCTRL T   &none       &none     &hm RCTRL Y   &hm RALT H   &hm RGUI P   &none
&kp B   &kp X        &kp C        &kp V         &none       &none     &kp M         &kp COMMA    &kp DOT      &kp FSLH
&none   &none        &none        &none         &none       &none     &none         &none        &none        &none
                     &trans       &none         &trans      &mo SYM   &trans        &trans
        >;
        };

        navigation { // Layer 2
            bindings = <
&none   &hm LGUI Q   &hm LALT RS(Q)   &hm LCTRL GRAVE   &none       &none     &hm RCTRL EXCL   &hm RALT LBRC   &hm RGUI RIGHT   &none
&kp Z   &kp RS(Z)    &kp DOWN         &kp UP            &none       &none     &kp LEFT         &kp RS(SQT)     &kp SQT          &kp LBKT
&none   &none        &none            &none             &none       &none     &none            &none           &none            &none
                     &trans           &mo SYM           &trans      &none     &trans           &trans
        >;
        };

        number { // Layer 3
            bindings = <
&none     &hm LGUI E   &hm LALT N0   &hm LCTRL N1   &none       &none     &hm RCTRL N2   &hm RALT N3   &hm RGUI N4   &none
&kp SQT   &kp RBRC     &kp N5        &kp N6         &none       &none     &kp N7         &kp N8        &kp N9        &kp RBKT
&none     &none        &none         &none          &none       &none     &none          &none         &none         &none
                       &none         &trans         &trans      &trans    &trans         &trans
        >;
        };

        symbol { // Layer 4
            bindings = <
&none      &hm LGUI PRCNT   &hm LALT HASH   &hm LCTRL DLLR   &none       &none     &hm RCTRL RBKT   &hm RALT CARET   &hm RGUI BSLH   &none
&kp ATSN   &kp TILDE        &kp AMPS        &kp STAR         &none       &none     &kp MINUS        &kp EQUAL        &kp LPAR        &kp RPAR
&none      &none            &none           &none            &none       &none     &none            &none            &none           &none
                            &none           &none            &trans      &none     &trans           &trans
        >;
        };
    };
 };
